<?php

/**
 * @file
 * Provides an interface for developers to query the available data.
 */

/**
 * Implements hook_services_resources().
 */
function pw_api_services_resources() {
  $resources = array();

  // Provide parliaments as a resource.
  if (module_exists('taxonomy') && taxonomy_vocabulary_machine_name_load('parliaments')) {
    $resources['parliament'] = array(
      'retrieve' => array(
        'help' => 'Retrieves a parliament',
        'callback' => 'pw_api_parliament_retrieve',
        'file' => array('file' => 'parliament.inc', 'module' => 'pw_api'),
        'access arguments' => array('access content'),
        'args' => array(
          array(
            'name' => 'id',
            'type' => 'int',
            'description' => 'The id of the parliament to get',
            'source' => array('path' => 0),
            'optional' => FALSE,
          ),
        ),
      ),
      'index' => array(
        'help' => 'Retrieves a list of all parliaments',
        'callback' => 'pw_api_parliament_index',
        'access arguments' => array('access content'),
        'file' => array('file' => 'parliament.inc', 'module' => 'pw_api'),
      ),
    );
  }

  // Provide constituencies as a resource.
  if (node_type_get_type('constituency')) {
    $resources['constituency'] = array(
      'retrieve' => array(
        'help' => 'Retrieves a constituency',
        'callback' => 'pw_api_constituency_retrieve',
        'file' => array('file' => 'constituency.inc', 'module' => 'pw_api'),
        'access callback' => '_node_resource_access',
        'access arguments' => array('view'),
        'access arguments append' => TRUE,
        'args' => array(
          array(
            'name' => 'id',
            'type' => 'int',
            'description' => 'The id of the constituency',
            'source' => array('path' => 0),
            'optional' => FALSE,
          ),
        ),
      ),
      'index' => array(
        'help' => 'Retrieves a list of all constituencies',
        'file' => array('file' => 'constituency.inc', 'module' => 'pw_api'),
        'callback' => 'pw_api_constituency_index',
        'access arguments' => array('access content'),
      ),
    );
  }

  // Provide committees as a resource.
  if (node_type_get_type('committee')) {
    $resources['committee'] = array(
      'retrieve' => array(
        'help' => 'Retrieves a committee',
        'callback' => 'pw_api_committee_retrieve',
        'file' => array('file' => 'committee.inc', 'module' => 'pw_api'),
        'access callback' => '_node_resource_access',
        'access arguments' => array('view'),
        'access arguments append' => TRUE,
        'args' => array(
          array(
            'name' => 'id',
            'type' => 'int',
            'description' => 'The id of the committee',
            'source' => array('path' => 0),
            'optional' => FALSE,
          ),
        ),
      ),
      'index' => array(
        'help' => 'Retrieves a list of all committees',
        'file' => array('file' => 'committee.inc', 'module' => 'pw_api'),
        'callback' => 'pw_api_committee_index',
        'access arguments' => array('access content'),
      ),
    );
  }

  // Provide politicians as a resource.
  if (user_role_load_by_name('politician')) {
    $resources['politician'] = array(
      'retrieve' => array(
        'help' => 'Retrieves a politician',
        'callback' => 'pw_api_politician_retrieve',
        'file' => array('file' => 'politician.inc', 'module' => 'pw_api'),
        'access callback' => '_user_resource_access',
        'access arguments' => array('view'),
        'access arguments append' => TRUE,
        'args' => array(
          array(
            'name' => 'id',
            'type' => 'int',
            'description' => 'The id of the politician',
            'source' => array('path' => 0),
            'optional' => FALSE,
          ),
        ),
      ),
      'index' => array(
        'help' => 'Retrieves a list of all politicians',
        'callback' => 'pw_api_politician_index',
        'file' => array('file' => 'politician.inc', 'module' => 'pw_api'),
        'access arguments' => array('access user profiles'),
      ),
    );
  }

  return $resources;
}

/**
 * Implements hook_rest_server_response_formatters_alter().
 */
function pw_api_rest_server_response_formatters_alter(&$formatters) {
  $formatters['csv'] = array(
    'mime types' => array('text/comma-separated-values', 'text/csv'),
    'view' => 'CsvFormatView',
  );
}
